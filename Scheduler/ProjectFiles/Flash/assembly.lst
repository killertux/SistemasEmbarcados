


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    2 00000000         
    3 00000000         f_asm
    4 00000000                 GLOBAL           f_asm
    5 00000000                 EXTERN           graphicMemory
    6 00000000                 EXTERN           direction
    7 00000000                 EXTERN           velocity
    8 00000000         
    9 00000000                 THUMB
   10 00000000 E92D 1FFF       push{r0-r12}
   11 00000004 4840            ldr              r0, =graphicMemory
   12 00000006 4941            ldr              r1, =direction
   13 00000008 4A41            ldr              r2, =velocity
   14 0000000A F891 B000       ldrb             r11, [r1]
   15 0000000E 7816            ldrb             r6, [r2]
   16 00000010         
   17 00000010         ; LOOP EXTERNO
   18 00000010 F04F 017F       MOV              r1, #127
   19 00000014         EXTERNAL_LOOP
   20 00000014         
   21 00000014         ; LOOP VELOCIDADE
   22 00000014 4632            MOV              r2, r6
   23 00000016         SPEED_LOOP
   24 00000016 F04F 0900       mov              r9, #0
   25 0000001A F04F 0480       mov              r4, #128
   26 0000001E FB01 F404       mul              r4, r1, r4
   27 00000022         
   28 00000022 F1BB 0F00       cmp              r11, #0
   29 00000026 D008            beq              MOVE_RIGHT
   30 00000028         
   31 00000028 F1BB 0F01       cmp              r11, #1
   32 0000002C D01E            beq              MOVE_LEFT
   33 0000002E         
   34 0000002E F1BB 0F02       cmp              r11, #2
   35 00000032 D032            beq              MOVE_UP
   36 00000034         
   37 00000034 F1BB 0F03       cmp              r11, #3
   38 00000038 D045            beq              MOVE_DOWN
   39 0000003A         
   40 0000003A         MOVE_RIGHT
   41 0000003A F104 097F       add              r9, r4, #127
   42 0000003E F810 5009       ldrb             r5, [r0, r9]
   43 00000042 F04F 0300       MOV              r3, #0
   44 00000046 F04F 0800       mov              r8, #0
   45 0000004A         MOVE_RIGHT_LOOP
   46 0000004A EB04 0803       add              r8, r4, r3
   47 0000004E F810 7008       ldrb             r7, [r0, r8]
   48 00000052 EA87 0705       EOR              r7, r7, r5
   49 00000056 EA85 0507       EOR              r5, r5, r7
   50 0000005A EA87 0705       EOR              r7, r7, r5
   51 0000005E F800 7008       strb             r7, [r0, r8]
   52 00000062 F103 0301       add              r3, r3, #1
   53 00000066 2B80            cmp              r3, #128
   54 00000068 D1EF            bne              MOVE_RIGHT_LOOP
   55 0000006A E043            b                CONTINUE
   56 0000006C         
   57 0000006C         MOVE_LEFT
   58 0000006C 5D05            ldrb             r5, [r0, r4]



ARM Macro Assembler    Page 2 


   59 0000006E F04F 037F       MOV              r3, #127
   60 00000072 F04F 0800       mov              r8, #0
   61 00000076         MOVE_LEFT_LOOP
   62 00000076 EB04 0803       add              r8, r4, r3
   63 0000007A F810 7008       ldrb             r7, [r0, r8]
   64 0000007E EA87 0705       EOR              r7, r7, r5
   65 00000082 EA85 0507       EOR              r5, r5, r7
   66 00000086 EA87 0705       EOR              r7, r7, r5
   67 0000008A F800 7008       strb             r7, [r0, r8]
   68 0000008E F1A3 0301       sub              r3, r3, #1
   69 00000092 F1B3 3FFF       cmp              r3, #-1
   70 00000096 D1EE            bne              MOVE_LEFT_LOOP
   71 00000098 E02C            b                CONTINUE
   72 0000009A         
   73 0000009A         MOVE_UP
   74 0000009A 5C45            ldrb             r5, [r0, r1]
   75 0000009C F04F 0880       mov              r8, #128
   76 000000A0 F04F 037F       MOV              r3, #127
   77 000000A4         MOVE_UP_LOOP
   78 000000A4 FB03 F408       mul              r4, r3, r8
   79 000000A8 440C            add              r4, r4, r1
   80 000000AA 5D07            ldrb             r7, [r0, r4]
   81 000000AC EA87 0705       EOR              r7, r7, r5
   82 000000B0 EA85 0507       EOR              r5, r5, r7
   83 000000B4 EA87 0705       EOR              r7, r7, r5
   84 000000B8 5507            strb             r7, [r0, r4]
   85 000000BA F1A3 0301       sub              r3, r3, #1
   86 000000BE F1B3 3FFF       cmp              r3, #-1
   87 000000C2 D1EF            bne              MOVE_UP_LOOP
   88 000000C4 E016            b                CONTINUE
   89 000000C6         
   90 000000C6         MOVE_DOWN
   91 000000C6 F501 597E       add              r9, r1, #(127*128)
   92 000000CA F810 5009       ldrb             r5, [r0, r9]
   93 000000CE F04F 0880       mov              r8, #128
   94 000000D2 F04F 0300       MOV              r3, #0
   95 000000D6         MOVE_DOWN_LOOP
   96 000000D6 FB03 F408       mul              r4, r3, r8
   97 000000DA 440C            add              r4, r4, r1
   98 000000DC 5D07            ldrb             r7, [r0, r4]
   99 000000DE EA87 0705       EOR              r7, r7, r5
  100 000000E2 EA85 0507       EOR              r5, r5, r7
  101 000000E6 EA87 0705       EOR              r7, r7, r5
  102 000000EA 5507            strb             r7, [r0, r4]
  103 000000EC F103 0301       add              r3, r3, #1
  104 000000F0 2B80            cmp              r3, #128
  105 000000F2 D1F0            bne              MOVE_DOWN_LOOP
  106 000000F4         CONTINUE
  107 000000F4 1E52            SUBS             r2, r2, #1
  108 000000F6 2A00            cmp              r2, #0
  109 000000F8 D18D            BNE              SPEED_LOOP
  110 000000FA         ; FIM SPEED LOOP
  111 000000FA         
  112 000000FA 1E49            SUBS             r1, r1, #1
  113 000000FC F1B1 3FFF       cmp              r1, #-1
  114 00000100 D188            BNE              EXTERNAL_LOOP
  115 00000102         ; FIM LOOP EXTERNO
  116 00000102 E8BD 1FFF       POP{r0-r12}
  117 00000106 4770            bx               lr



ARM Macro Assembler    Page 3 


  118 00000108                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\flash\assembly.d -o.\flash\assembly.o -I.\RTE\_TM4C129_Flash 
-IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\C
MSIS\5.0.1\CMSIS\RTOS\RTX\INC -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C129 --predefine="__RTX SETA 1" --predefine="__EVAL SETA 1" --predef
ine="__UVISION_VERSION SETA 524" --predefine="_RTE_ SETA 1" --predefine="TM4C12
94NCPDT SETA 1" --list=.\flash\assembly.lst assembly.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 1 in file assembly.s
   Uses
      None
Comment: .text unused
CONTINUE 000000F4

Symbol: CONTINUE
   Definitions
      At line 106 in file assembly.s
   Uses
      At line 55 in file assembly.s
      At line 71 in file assembly.s
      At line 88 in file assembly.s

EXTERNAL_LOOP 00000014

Symbol: EXTERNAL_LOOP
   Definitions
      At line 19 in file assembly.s
   Uses
      At line 114 in file assembly.s
Comment: EXTERNAL_LOOP used once
MOVE_DOWN 000000C6

Symbol: MOVE_DOWN
   Definitions
      At line 90 in file assembly.s
   Uses
      At line 38 in file assembly.s
Comment: MOVE_DOWN used once
MOVE_DOWN_LOOP 000000D6

Symbol: MOVE_DOWN_LOOP
   Definitions
      At line 95 in file assembly.s
   Uses
      At line 105 in file assembly.s
Comment: MOVE_DOWN_LOOP used once
MOVE_LEFT 0000006C

Symbol: MOVE_LEFT
   Definitions
      At line 57 in file assembly.s
   Uses
      At line 32 in file assembly.s
Comment: MOVE_LEFT used once
MOVE_LEFT_LOOP 00000076

Symbol: MOVE_LEFT_LOOP
   Definitions
      At line 61 in file assembly.s
   Uses
      At line 70 in file assembly.s
Comment: MOVE_LEFT_LOOP used once
MOVE_RIGHT 0000003A



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: MOVE_RIGHT
   Definitions
      At line 40 in file assembly.s
   Uses
      At line 29 in file assembly.s
Comment: MOVE_RIGHT used once
MOVE_RIGHT_LOOP 0000004A

Symbol: MOVE_RIGHT_LOOP
   Definitions
      At line 45 in file assembly.s
   Uses
      At line 54 in file assembly.s
Comment: MOVE_RIGHT_LOOP used once
MOVE_UP 0000009A

Symbol: MOVE_UP
   Definitions
      At line 73 in file assembly.s
   Uses
      At line 35 in file assembly.s
Comment: MOVE_UP used once
MOVE_UP_LOOP 000000A4

Symbol: MOVE_UP_LOOP
   Definitions
      At line 77 in file assembly.s
   Uses
      At line 87 in file assembly.s
Comment: MOVE_UP_LOOP used once
SPEED_LOOP 00000016

Symbol: SPEED_LOOP
   Definitions
      At line 23 in file assembly.s
   Uses
      At line 109 in file assembly.s
Comment: SPEED_LOOP used once
f_asm 00000000

Symbol: f_asm
   Definitions
      At line 3 in file assembly.s
   Uses
      At line 4 in file assembly.s
Comment: f_asm used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

direction 00000000

Symbol: direction
   Definitions
      At line 6 in file assembly.s
   Uses
      At line 12 in file assembly.s
Comment: direction used once
graphicMemory 00000000

Symbol: graphicMemory
   Definitions
      At line 5 in file assembly.s
   Uses
      At line 11 in file assembly.s
Comment: graphicMemory used once
velocity 00000000

Symbol: velocity
   Definitions
      At line 7 in file assembly.s
   Uses
      At line 13 in file assembly.s
Comment: velocity used once
3 symbols
354 symbols in table
